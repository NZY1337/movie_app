{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NZY\\\\Desktop\\\\vidly\\\\start\\\\vidly\\\\src\\\\components\\\\common\\\\protectedRoute.jsx\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport auth from '../../services/authService';\n/*\r\n    the logic:\r\n    - return the Route Component with its params {...rest} and the render function\r\n\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  path,\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (!auth.getUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 37\n      }, this);\n      return Component && /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n/* \r\n    <Route\r\n        render={(props) => {\r\n            if (!user) return <Redirect to=\"/login\" />\r\n            return <MovieForm {...props} />\r\n        }}\r\n    /> \r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/NZY/Desktop/vidly/start/vidly/src/components/common/protectedRoute.jsx"],"names":["React","Redirect","Route","auth","ProtectedRoute","path","component","Component","rest","props","getUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAS,EAAEC,SAAnB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AAClE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAI,CAACN,IAAI,CAACO,OAAL,EAAL,EAAqB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACrB,aAAOH,SAAS,iBAAI,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,cAApB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAML,c;AAYN,eAAeA,cAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport auth from '../../services/authService'\r\n\r\n/*\r\n    the logic:\r\n    - return the Route Component with its params {...rest} and the render function\r\n\r\n*/\r\n\r\nconst ProtectedRoute = ({ path, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getUser()) return <Redirect to=\"/login\" />\r\n        return Component && <Component {...props} />\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute\r\n\r\n/* \r\n    <Route\r\n        render={(props) => {\r\n            if (!user) return <Redirect to=\"/login\" />\r\n            return <MovieForm {...props} />\r\n        }}\r\n    /> \r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}