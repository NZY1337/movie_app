{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandr\\\\Desktop\\\\stuffs\\\\projects\\\\vidly_good\\\\vidly\\\\src\\\\components\\\\common\\\\form.jsx\";\nimport React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Input from './input';\nimport Select from './select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(this.state.data, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return; //  this.doSubmitMovie()\n\n      this.doSubmitCustomer(); // this.doSubmit()\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value; //? for input type Checkbox = MovieForm\n\n      if (input.type === 'checkbox') {\n        data[input.name] = input.checked;\n      } //? for input type file = CustomerForm\n\n\n      if (input.type === 'file') {\n        data[input.name] = input.files[0]; //   console.log(input.files[0].name)\n      }\n\n      this.setState({\n        data,\n        errors\n      });\n    };\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: this.validate(),\n      className: \"btn popcorn-btn\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderSelect(name, label, options) {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      name: name,\n      value: data[name],\n      label: label,\n      options: options,\n      onChange: this.handleChange,\n      error: errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  } //! input[type=\"file\" should not have a value] - THINK ABOUT IT AGAIN or refactor the code\n\n\n  renderInput(name, label, type = 'text', checked, accept = '.jpg', callBack) {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: type,\n      name: name,\n      defaultValue: type === 'file' && data[name] !== null ? data[name].name : data[name] // value={data[name]}\n      ,\n      label: label,\n      rinnerRef: callBack,\n      onChange: this.handleChange,\n      error: errors[name],\n      checked: checked,\n      accept: accept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/mandr/Desktop/stuffs/projects/vidly_good/vidly/src/components/common/form.jsx"],"names":["React","Component","Joi","Input","Select","Form","state","data","errors","validate","options","abortEarly","error","schema","item","details","path","message","validateProperty","name","value","obj","handleSubmit","e","preventDefault","setState","doSubmitCustomer","handleChange","currentTarget","input","errorMessage","type","checked","files","renderButton","label","renderSelect","renderInput","accept","callBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Input from './input'\r\nimport Select from './select'\r\n\r\nclass Form extends Component {\r\n   \r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  }\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false }\r\n    const { error } = Joi.validate(this.state.data, this.schema, options)\r\n    if (!error) return null\r\n\r\n    const errors = {}\r\n    for (let item of error.details) errors[item.path[0]] = item.message\r\n    \r\n    return errors\r\n  }\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value }\r\n    const schema = { [name]: this.schema[name] }\r\n    const { error } = Joi.validate(obj, schema)\r\n    return error ? error.details[0].message : null\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const errors = this.validate()\r\n    this.setState({ errors: errors || {} })\r\n    if (errors) return\r\n\r\n    //  this.doSubmitMovie()\r\n\r\n    this.doSubmitCustomer()\r\n\r\n    // this.doSubmit()\r\n  }\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors }\r\n    const errorMessage = this.validateProperty(input)\r\n    if (errorMessage) errors[input.name] = errorMessage\r\n    else delete errors[input.name]\r\n\r\n    const data = { ...this.state.data }\r\n\r\n    data[input.name] = input.value\r\n\r\n    //? for input type Checkbox = MovieForm\r\n    if (input.type === 'checkbox') {\r\n      data[input.name] = input.checked\r\n    }\r\n\r\n    //? for input type file = CustomerForm\r\n    if (input.type === 'file') {\r\n      data[input.name] = input.files[0]\r\n      \r\n    //   console.log(input.files[0].name)\r\n    }\r\n\r\n    this.setState({ data, errors })\r\n  }\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn popcorn-btn\">\r\n        {label}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    )\r\n  }\r\n  \r\n  //! input[type=\"file\" should not have a value] - THINK ABOUT IT AGAIN or refactor the code\r\n  renderInput(name, label, type = 'text', checked, accept = '.jpg', callBack) {\r\n    const { data, errors } = this.state\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        defaultValue={\r\n          type === 'file' && data[name] !== null ? data[name].name : data[name]\r\n        }\r\n        // value={data[name]}\r\n        label={label}\r\n        rinnerRef={callBack}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        checked={checked}\r\n        accept={accept}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}