{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandr\\\\Desktop\\\\stuffs\\\\projects\\\\vidly_good\\\\vidly\\\\src\\\\components\\\\common\\\\form.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(this.state.data, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let formId = e.currentTarget.id;\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n\n      if (formId === \"rental-form\") {\n        this.doSubmitRental();\n      } else if (formId === \"movie-form\") {\n        this.doSubmitMovie();\n      } else if (formId = \"customer-form\") {\n        this.doSubmitCustomer();\n      } // this.doSubmit()\n\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value; //? for input type Checkbox = MovieForm\n\n      if (input.type === \"checkbox\") {\n        data[input.name] = input.checked;\n      } //? for input type file = CustomerForm\n\n\n      if (input.type === \"file\") {\n        data[input.name] = input.files[0]; //   console.log(input.files[0].name)\n      }\n\n      this.setState({\n        data,\n        errors\n      });\n    };\n\n    this.inputRef = /*#__PURE__*/React.createRef();\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: this.validate(),\n      className: \"btn popcorn-btn\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderSelect(name, label, options) {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      name: name,\n      value: data[name],\n      label: label,\n      options: options,\n      onChange: this.handleChange,\n      error: errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  } //! input[type=\"file\" should not have a value] - THINK ABOUT IT AGAIN or refactor the code\n\n\n  renderInput(name, label, type = \"text\", checked, accept = \".jpg\", ref) {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: type,\n      name: name,\n      defaultValue: type === \"file\" && data[name] !== null ? data[name].name : data[name] // value={data[name]}\n      ,\n      label: label,\n      onChange: this.handleChange,\n      error: errors[name],\n      checked: checked,\n      accept: accept,\n      innerRef: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/mandr/Desktop/stuffs/projects/vidly_good/vidly/src/components/common/form.jsx"],"names":["React","Component","Joi","Input","Select","Form","constructor","props","state","data","errors","validate","options","abortEarly","error","schema","item","details","path","message","validateProperty","name","value","obj","handleSubmit","e","preventDefault","formId","currentTarget","id","setState","doSubmitRental","doSubmitMovie","doSubmitCustomer","handleChange","input","errorMessage","type","checked","files","inputRef","createRef","renderButton","label","renderSelect","renderInput","accept","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let formId = e.currentTarget.id;\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    if (formId === \"rental-form\") {\r\n      this.doSubmitRental();\r\n    } else if (formId === \"movie-form\") {\r\n      this.doSubmitMovie();\r\n    } else if ((formId = \"customer-form\")) {\r\n      this.doSubmitCustomer();\r\n    }\r\n\r\n    // this.doSubmit()\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n\r\n    data[input.name] = input.value;\r\n\r\n    //? for input type Checkbox = MovieForm\r\n    if (input.type === \"checkbox\") {\r\n      data[input.name] = input.checked;\r\n    }\r\n\r\n    //? for input type file = CustomerForm\r\n    if (input.type === \"file\") {\r\n      data[input.name] = input.files[0];\r\n\r\n      //   console.log(input.files[0].name)\r\n    }\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn popcorn-btn\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  //! input[type=\"file\" should not have a value] - THINK ABOUT IT AGAIN or refactor the code\r\n  renderInput(name, label, type = \"text\", checked, accept = \".jpg\", ref) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        defaultValue={type === \"file\" && data[name] !== null ? data[name].name : data[name]}\r\n        // value={data[name]}\r\n\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        checked={checked}\r\n        accept={accept}\r\n        innerRef={ref}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}