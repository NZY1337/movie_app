{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NZY\\\\Desktop\\\\vidly\\\\start\\\\vidly\\\\src\\\\components\\\\movieForm.jsx\";\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getMovie, saveMovie } from '../services/movieService';\nimport { getGenresApi } from '../services/genreService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: '',\n        genreId: '',\n        numberInStock: '',\n        dailyRentalRate: '',\n        movieCover: '',\n        liked: true\n      },\n      genres: [],\n      errors: {},\n      checked: false\n    };\n    this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label('Title'),\n      genreId: Joi.string().required().label('Genre'),\n      numberInStock: Joi.number().required().min(0).max(100).label('Number in Stock'),\n      dailyRentalRate: Joi.number().required().min(0).max(10).label('Daily Rental Rate'),\n      movieCover: Joi.string().required().label('Movie Cover'),\n      liked: Joi.boolean().label('Add To Favorite')\n    };\n\n    this.doSubmit = async () => {\n      await saveMovie(this.state.data);\n      this.props.history.push('/movies');\n    };\n\n    this.handleChecked = () => {\n      console.log(this.state.checked);\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n  }\n\n  async populateGenres() {\n    const {\n      data: genres\n    } = await getGenresApi();\n    this.setState({\n      genres\n    });\n  }\n\n  async populateMovie() {\n    try {\n      // detect if we edit a new movie or not\n      const movieId = this.props.match.params.id;\n      if (movieId === 'new') return;\n      const {\n        data: movie\n      } = await getMovie(movieId);\n      console.log(movie);\n      this.setState({\n        data: this.mapToViewModel(movie)\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        this.props.history.replace('/not-found');\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n      movieCover: movie.movieCover,\n      liked: movie.liked\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput('title', 'Title'), this.renderSelect('genreId', 'Genre', this.state.genres), this.renderInput('numberInStock', 'Number in Stock', 'number'), this.renderInput('dailyRentalRate', 'Rate'), this.renderInput('movieCover', 'Movie Cover', 'url'), this.renderInput('liked', 'Add To Favorite', 'checkbox', this.state.checked), this.renderButton('Save')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["C:/Users/NZY/Desktop/vidly/start/vidly/src/components/movieForm.jsx"],"names":["React","Joi","Form","getMovie","saveMovie","getGenresApi","MovieForm","state","data","title","genreId","numberInStock","dailyRentalRate","movieCover","liked","genres","errors","checked","schema","_id","string","required","label","number","min","max","boolean","doSubmit","props","history","push","handleChecked","console","log","setState","populateGenres","populateMovie","movieId","match","params","id","movie","mapToViewModel","ex","response","status","replace","componentDidMount","genre","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Joi from 'joi-browser'\nimport Form from './common/form'\nimport { getMovie, saveMovie } from '../services/movieService'\nimport { getGenresApi } from '../services/genreService'\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: '',\n      genreId: '',\n      numberInStock: '',\n      dailyRentalRate: '',\n      movieCover: '',\n      liked: true,\n    },\n    genres: [],\n    errors: {},\n    checked: false,\n  }\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label('Title'),\n    genreId: Joi.string().required().label('Genre'),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label('Number in Stock'),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label('Daily Rental Rate'),\n    movieCover: Joi.string().required().label('Movie Cover'),\n    liked: Joi.boolean().label('Add To Favorite'),\n  }\n\n  async populateGenres() {\n    const { data: genres } = await getGenresApi()\n    this.setState({ genres })\n  }\n\n  async populateMovie() {\n    try {\n      // detect if we edit a new movie or not\n      const movieId = this.props.match.params.id\n      if (movieId === 'new') return\n\n      const { data: movie } = await getMovie(movieId)\n      console.log(movie)\n      this.setState({ data: this.mapToViewModel(movie) })\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        this.props.history.replace('/not-found')\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres()\n    await this.populateMovie()\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n      movieCover: movie.movieCover,\n      liked: movie.liked,\n    }\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data)\n\n    this.props.history.push('/movies')\n  }\n\n  handleChecked = () => {\n    console.log(this.state.checked)\n    this.setState({ checked: !this.state.checked })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput('title', 'Title')}\n          {this.renderSelect('genreId', 'Genre', this.state.genres)}\n          {this.renderInput('numberInStock', 'Number in Stock', 'number')}\n          {this.renderInput('dailyRentalRate', 'Rate')}\n          {this.renderInput('movieCover', 'Movie Cover', 'url')}\n          {this.renderInput(\n            'liked',\n            'Add To Favorite',\n            'checkbox',\n            this.state.checked,\n          )}\n          {this.renderButton('Save')}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default MovieForm\n"]},"metadata":{},"sourceType":"module"}