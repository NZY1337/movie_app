{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandr\\\\Desktop\\\\stuffs\\\\projects\\\\vidly_good\\\\vidly\\\\src\\\\components\\\\registerForm.jsx\";\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport auth from '../services/authService'; // register now is a method of userServices object\n\nimport * as userService from '../services/userService'; // import only register\n// import { register } from '../services/userService'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        username: '',\n        password: '',\n        name: ''\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().email().label('Username'),\n      password: Joi.string().required().min(5).label('Password'),\n      name: Joi.string().required().label('Name')\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const response = await userService.register(this.state.data);\n        auth.loginWithJwt('token', response.headers['x-auth-token']); // reload the page\n\n        window.location = '/';\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors\n          }; // comes from the server\n\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [this.renderInput('username', 'Username'), this.renderInput('password', 'Password', 'password'), this.renderInput('name', 'Name'), this.renderButton('Register')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["C:/Users/mandr/Desktop/stuffs/projects/vidly_good/vidly/src/components/registerForm.jsx"],"names":["React","Joi","Form","auth","userService","RegisterForm","state","data","username","password","name","errors","schema","string","required","email","label","min","doSubmit","response","register","loginWithJwt","headers","window","location","ex","status","setState","render","handleSubmit","renderInput","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CAEA;;AACA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B,C,CAEA;AACA;;;;AAEA,MAAMC,YAAN,SAA2BH,IAA3B,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADsB;AAAA,SAM9BC,MAN8B,GAMrB;AACPJ,MAAAA,QAAQ,EAAEP,GAAG,CAACY,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,GAAgCC,KAAhC,CAAsC,UAAtC,CADH;AAEPP,MAAAA,QAAQ,EAAER,GAAG,CAACY,MAAJ,GAAaC,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BD,KAA/B,CAAqC,UAArC,CAFH;AAGPN,MAAAA,IAAI,EAAET,GAAG,CAACY,MAAJ,GAAaC,QAAb,GAAwBE,KAAxB,CAA8B,MAA9B;AAHC,KANqB;;AAAA,SAY9BE,QAZ8B,GAYnB,YAAY;AACrB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,QAAZ,CAAqB,KAAKd,KAAL,CAAWC,IAAhC,CAAvB;AACAJ,QAAAA,IAAI,CAACkB,YAAL,CAAkB,OAAlB,EAA2BF,QAAQ,CAACG,OAAT,CAAiB,cAAjB,CAA3B,EAFE,CAIF;;AACAC,QAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACD,OAND,CAME,OAAOC,EAAP,EAAW;AACX,YAAIA,EAAE,CAACN,QAAH,IAAeM,EAAE,CAACN,QAAH,CAAYO,MAAZ,KAAuB,GAA1C,EAA+C;AAC7C,gBAAMf,MAAM,GAAG,EAAE,GAAG,KAAKL,KAAL,CAAWK;AAAhB,WAAf,CAD6C,CAE7C;;AACAA,UAAAA,MAAM,CAACH,QAAP,GAAkBiB,EAAE,CAACN,QAAH,CAAYZ,IAA9B;AACA,eAAKoB,QAAL,CAAc;AAAEhB,YAAAA;AAAF,WAAd;AACD;AACF;AACF,KA3B6B;AAAA;;AA6B9BiB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,uBACG,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,UAAzC,CAFH,EAGG,KAAKA,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAHH,EAIG,KAAKC,YAAL,CAAkB,UAAlB,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA7C6B;;AAgDhC,eAAe1B,YAAf","sourcesContent":["import React from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Form from './common/form'\r\nimport auth from '../services/authService'\r\n\r\n// register now is a method of userServices object\r\nimport * as userService from '../services/userService'\r\n\r\n// import only register\r\n// import { register } from '../services/userService'\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: '', password: '', name: '' },\r\n    errors: {},\r\n  }\r\n\r\n  schema = {\r\n    username: Joi.string().required().email().label('Username'),\r\n    password: Joi.string().required().min(5).label('Password'),\r\n    name: Joi.string().required().label('Name'),\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data)\r\n      auth.loginWithJwt('token', response.headers['x-auth-token'])\r\n\r\n      // reload the page\r\n      window.location = '/'\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors }\r\n        // comes from the server\r\n        errors.username = ex.response.data\r\n        this.setState({ errors })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-6\">\r\n            <h1>Register</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput('username', 'Username')}\r\n              {this.renderInput('password', 'Password', 'password')}\r\n              {this.renderInput('name', 'Name')}\r\n              {this.renderButton('Register')}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegisterForm\r\n"]},"metadata":{},"sourceType":"module"}