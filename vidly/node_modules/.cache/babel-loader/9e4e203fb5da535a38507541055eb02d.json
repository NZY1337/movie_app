{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NZY\\\\Desktop\\\\vidly\\\\start\\\\vidly\\\\src\\\\components\\\\movieForm.jsx\";\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getMovie, saveMovie } from '../services/movieService';\nimport { getGenresApi } from '../services/genreService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: '',\n        genreId: '',\n        numberInStock: '',\n        dailyRentalRate: '',\n        movieCover: '',\n        liked: false\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label('Title'),\n      genreId: Joi.string().required().label('Genre'),\n      numberInStock: Joi.number().required().min(0).max(100).label('Number in Stock'),\n      dailyRentalRate: Joi.number().required().min(0).max(10).label('Daily Rental Rate'),\n      movieCover: Joi.string().required().label('Movie Cover'),\n      liked: Joi.boolean().label('Add To Favorite')\n    };\n\n    this.doSubmitMovie = async () => {\n      await saveMovie(this.state.data);\n      this.props.history.push('/movies');\n    };\n  }\n\n  async populateGenres() {\n    const {\n      data: genres\n    } = await getGenresApi();\n    this.setState({\n      genres\n    });\n  }\n\n  async populateMovie() {\n    try {\n      // detect if we edit a new movie or not\n      const movieId = this.props.match.params.id;\n      if (movieId === 'new') return;\n      const {\n        data: movie\n      } = await getMovie(movieId);\n      this.setState({\n        data: this.mapToViewModel(movie)\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        this.props.history.replace('/not-found');\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      //   !delete the id when submitting this\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n      movieCover: movie.movieCover,\n      liked: movie.liked\n    };\n  }\n\n  render() {\n    const {\n      liked\n    } = this.state.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Edit Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            className: \"edit-form-movie\",\n            children: [this.renderInput('title', 'Title'), this.renderSelect('genreId', 'Genre', this.state.genres), this.renderInput('numberInStock', 'Number in Stock', 'number'), this.renderInput('dailyRentalRate', 'Rate'), this.renderInput('movieCover', 'Movie Cover', 'url'), this.renderInput('liked', 'Add To Favorite', 'checkbox', liked), this.renderButton('Save')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["C:/Users/NZY/Desktop/vidly/start/vidly/src/components/movieForm.jsx"],"names":["React","Joi","Form","getMovie","saveMovie","getGenresApi","MovieForm","state","data","title","genreId","numberInStock","dailyRentalRate","movieCover","liked","genres","errors","schema","_id","string","required","label","number","min","max","boolean","doSubmitMovie","props","history","push","populateGenres","setState","populateMovie","movieId","match","params","id","movie","mapToViewModel","ex","response","status","replace","componentDidMount","genre","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Joi from 'joi-browser'\nimport Form from './common/form'\nimport { getMovie, saveMovie } from '../services/movieService'\nimport { getGenresApi } from '../services/genreService'\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: '',\n      genreId: '',\n      numberInStock: '',\n      dailyRentalRate: '',\n      movieCover: '',\n      liked: false,\n    },\n    genres: [],\n    errors: {},\n  }\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label('Title'),\n    genreId: Joi.string().required().label('Genre'),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label('Number in Stock'),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label('Daily Rental Rate'),\n    movieCover: Joi.string().required().label('Movie Cover'),\n    liked: Joi.boolean().label('Add To Favorite'),\n  }\n\n  async populateGenres() {\n    const { data: genres } = await getGenresApi()\n    this.setState({ genres })\n  }\n\n  async populateMovie() {\n    try {\n      // detect if we edit a new movie or not\n      const movieId = this.props.match.params.id\n      if (movieId === 'new') return\n\n      const { data: movie } = await getMovie(movieId)\n\n      this.setState({ data: this.mapToViewModel(movie) })\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        this.props.history.replace('/not-found')\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres()\n    await this.populateMovie()\n  }\n\n  mapToViewModel(movie) {\n    return {\n      //   !delete the id when submitting this\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n      movieCover: movie.movieCover,\n      liked: movie.liked,\n    }\n  }\n\n  doSubmitMovie = async () => {\n    await saveMovie(this.state.data)\n\n    this.props.history.push('/movies')\n  }\n\n  render() {\n    const { liked } = this.state.data\n\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-8\">\n            <h1>Edit Movie</h1>\n            <form onSubmit={this.handleSubmit} className=\"edit-form-movie\">\n              {this.renderInput('title', 'Title')}\n              {this.renderSelect('genreId', 'Genre', this.state.genres)}\n              {this.renderInput('numberInStock', 'Number in Stock', 'number')}\n              {this.renderInput('dailyRentalRate', 'Rate')}\n              {this.renderInput('movieCover', 'Movie Cover', 'url')}\n              {this.renderInput('liked', 'Add To Favorite', 'checkbox', liked)}\n              {this.renderButton('Save')}\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MovieForm\n"]},"metadata":{},"sourceType":"module"}