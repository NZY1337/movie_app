{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandr\\\\Desktop\\\\stuffs\\\\projects\\\\vidly_good\\\\vidly\\\\src\\\\components\\\\customers\\\\customersForm.jsx\";\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Form from '../common/form';\nimport { saveCustomer, getCustomer } from '../../services/customerService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomersForm extends Form {\n  constructor(props) {\n    super(props);\n    this.schema = {\n      _id: Joi.string(),\n      name: Joi.string().min(5).max(50).required(),\n      phone: Joi.string().min(5).max(50).required(),\n      isGold: Joi.boolean(),\n      imageBase64: Joi.any()\n    };\n\n    this.doSubmitCustomer = async e => {\n      const data = new FormData();\n      data.append('name', this.state.data.name);\n      data.append('file', this.state.data.imageBase64);\n      data.append('isGold', this.state.data.isGold);\n      data.append('phone', this.state.data.phone);\n      const findCustomerId = this.props.match.params.id !== 'new' ? this.props.match.params.id : null;\n      await saveCustomer(data, findCustomerId);\n      this.props.history.push('/customers');\n    };\n\n    this.mapCustomerToView = customer => {\n      return {\n        //   !delete the id when submitting this\n        _id: customer._id,\n        name: customer.name,\n        isGold: customer.isGold,\n        phone: customer.phone,\n        imageBase64: customer.imageBase64\n      };\n    };\n\n    this.state = {\n      data: {\n        name: '',\n        isGold: null,\n        phone: '',\n        imageBase64: null\n      },\n      errors: {},\n      isGold: [{\n        _id: true,\n        name: 'Yes'\n      }, {\n        _id: false,\n        name: 'No'\n      }]\n    };\n  }\n\n  async populateCustomer() {\n    try {\n      // detect if we edit a new movie or not\n      const customerId = this.props.match.params.id;\n      if (customerId === 'new') return;\n      const {\n        data: customer\n      } = await getCustomer(customerId);\n      this.setState({\n        data: this.mapCustomerToView(customer)\n      });\n    } catch (ex) {\n      console.log('smth went wrong');\n\n      if (ex.response && ex.response.status === 404) {\n        this.props.history.replace('/not-found');\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateCustomer();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Edit Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"#\",\n            onSubmit: this.handleSubmit,\n            className: \"edit-form-movie\",\n            children: [this.renderInput('name', 'Name'), this.renderInput('phone', 'Phone'), this.renderSelect('isGold', 'Gold Customer', this.state.isGold), this.renderInput('imageBase64', 'User Image', 'file'), this.renderButton('Save')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CustomersForm;","map":{"version":3,"sources":["C:/Users/mandr/Desktop/stuffs/projects/vidly_good/vidly/src/components/customers/customersForm.jsx"],"names":["React","Joi","Form","saveCustomer","getCustomer","axios","CustomersForm","constructor","props","schema","_id","string","name","min","max","required","phone","isGold","boolean","imageBase64","any","doSubmitCustomer","e","data","FormData","append","state","findCustomerId","match","params","id","history","push","mapCustomerToView","customer","errors","populateCustomer","customerId","setState","ex","console","log","response","status","replace","componentDidMount","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Form from '../common/form'\r\nimport { saveCustomer, getCustomer } from '../../services/customerService'\r\nimport axios from 'axios'\r\n\r\nclass CustomersForm extends Form {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      data: {\r\n        name: '',\r\n        isGold: null,\r\n        phone: '',\r\n        imageBase64: null,\r\n      },\r\n      errors: {},\r\n      isGold: [\r\n        {\r\n          _id: true,\r\n          name: 'Yes',\r\n        },\r\n        {\r\n          _id: false,\r\n          name: 'No',\r\n        },\r\n      ],\r\n    }\r\n  }\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    name: Joi.string().min(5).max(50).required(),\r\n    phone: Joi.string().min(5).max(50).required(),\r\n    isGold: Joi.boolean(),\r\n    imageBase64: Joi.any(),\r\n  }\r\n\r\n  async populateCustomer() {\r\n    try {\r\n      // detect if we edit a new movie or not\r\n      const customerId = this.props.match.params.id\r\n      if (customerId === 'new') return\r\n\r\n      const { data: customer } = await getCustomer(customerId)\r\n      this.setState({ data: this.mapCustomerToView(customer) })\r\n    } catch (ex) {\r\n        console.log('smth went wrong')\r\n      if (ex.response && ex.response.status === 404) {\r\n        this.props.history.replace('/not-found')\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateCustomer()\r\n  }\r\n\r\n  doSubmitCustomer = async (e) => {\r\n   \r\n    const data = new FormData()\r\n\r\n    data.append('name', this.state.data.name,)\r\n    data.append('file', this.state.data.imageBase64)\r\n    data.append('isGold', this.state.data.isGold)\r\n    data.append('phone', this.state.data.phone)\r\n\r\n    const findCustomerId = this.props.match.params.id !== 'new' ?   this.props.match.params.id : null\r\n    await saveCustomer(data, findCustomerId)\r\n    \r\n\r\n    this.props.history.push('/customers')\r\n  }\r\n  \r\n\r\n  mapCustomerToView = (customer) => {\r\n    return {\r\n        //   !delete the id when submitting this\r\n        _id: customer._id,\r\n        name: customer.name,\r\n        isGold: customer.isGold,\r\n        phone: customer.phone,\r\n        imageBase64: customer.imageBase64,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-8\">\r\n            <h1>Edit Customer</h1>\r\n            <form\r\n              action=\"#\"\r\n              onSubmit={this.handleSubmit}\r\n              className=\"edit-form-movie\"\r\n            >\r\n              {this.renderInput('name', 'Name')}\r\n              {this.renderInput('phone', 'Phone')}\r\n              {this.renderSelect('isGold', 'Gold Customer', this.state.isGold)}\r\n              {this.renderInput('imageBase64', 'User Image', 'file')}\r\n              {this.renderButton('Save')}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomersForm\r\n"]},"metadata":{},"sourceType":"module"}