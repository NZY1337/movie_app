{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandr\\\\Desktop\\\\stuffs\\\\projects\\\\vidly_good\\\\vidly\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMoviesApi, deleteMovieApi } from \"../services/movieService\";\nimport { getGenresApi } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\nimport AnimateMovieCover from \"./animatedMovieCover\";\nimport Hero from \"./common/hero\";\nimport witcher from \"../utils/images/the-witcher.jpg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\"; // TODO:: changed the movieCover functionality -> onMouseHover remove the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cover: witcher,\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      searchQuery: \"\",\n      selectedGenre: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      },\n      currentMovieCover: null,\n      fullImgVisible: false,\n      genreActiveClassIndex: 0\n    };\n\n    this.handleDelete = async movie => {\n      const originalMovies = this.state.movies;\n      const movies = originalMovies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n\n      try {\n        await deleteMovieApi(movie._id);\n      } catch (err) {\n        if (err.response && err.response.status === 404) {\n          console.log(`Error: ${err}`);\n          this.setState({\n            movies: originalMovies\n          });\n        }\n      }\n    };\n\n    this.handleLike = async movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = (genre, index) => {\n      this.setState({\n        genreActiveClassIndex: index,\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.handleDisplayCover = id => {\n      const currentMovieCover = this.state.movies.find(movie => movie._id === id);\n      this.setState({\n        currentMovieCover,\n        fullImgVisible: true\n      }, () => {// console.log(this.state.fullImgVisible)\n      }); //! --> this will not show the updated state (true) because state is asyncronyous. Either call fullImgVisible in render or\n      //! --> call the callback for the setState and console.log(fullImgVisible)\n      // console.log(this.state.fullImgVisible)\n    };\n\n    this.handleHideCover = () => {\n      this.setState({\n        fullImgVisible: false\n      });\n    };\n\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        sortColumn,\n        selectedGenre,\n        searchQuery,\n        movies: allMovies\n      } = this.state;\n      let filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await getMoviesApi();\n    const {\n      data: genresApi\n    } = await getGenresApi();\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...genresApi];\n    this.setState({\n      movies,\n      genres\n    });\n  } //!:: optimistic delete\n\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      user\n    } = this.props;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery,\n      currentMovieCover,\n      genreActiveClassIndex\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"There are no movies in the \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 38\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(Hero, {\n          bgImg: this.state.cover,\n          description: \"Your Daily Dose of Movies\",\n          title: \"PopCorn App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n              items: this.state.genres // selectedItem={this.state.selectedGenre}\n              ,\n              onItemSelect: this.handleGenreSelect,\n              activeClass: genreActiveClassIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), currentMovieCover && /*#__PURE__*/_jsxDEV(AnimateMovieCover, {\n              movieSrc: currentMovieCover.movieCover,\n              setShowImg: this.state.fullImgVisible\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [user && /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/movies/new\",\n              className: \"btn popcorn-btn\",\n              style: {\n                marginBottom: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                style: {\n                  color: \"tomato\"\n                },\n                icon: faVideo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-weight-bold\",\n                children: \"New Movie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Showing \", totalCount, \" movies in the \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"database\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 52\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n              value: searchQuery,\n              onChange: this.handleSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n              user: this.props.user,\n              movies: movies,\n              sortColumn: sortColumn,\n              onLike: this.handleLike,\n              onDelete: this.handleDelete,\n              onSort: this.handleSort,\n              onHandleDisplayMovieCover: this.handleDisplayCover,\n              handleHideCover: this.handleHideCover\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              itemsCount: totalCount,\n              pageSize: pageSize,\n              currentPage: currentPage,\n              onPageChange: this.handlePageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["C:/Users/mandr/Desktop/stuffs/projects/vidly_good/vidly/src/components/movies.jsx"],"names":["React","Component","Link","MoviesTable","ListGroup","Pagination","getMoviesApi","deleteMovieApi","getGenresApi","paginate","_","SearchBox","AnimateMovieCover","Hero","witcher","FontAwesomeIcon","faVideo","Movies","state","cover","movies","genres","currentPage","pageSize","searchQuery","selectedGenre","sortColumn","path","order","currentMovieCover","fullImgVisible","genreActiveClassIndex","handleDelete","movie","originalMovies","filter","m","_id","setState","err","response","status","console","log","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","handleDisplayCover","id","find","handleHideCover","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","genresApi","name","render","count","user","props","movieCover","marginBottom","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { getMoviesApi, deleteMovieApi } from \"../services/movieService\";\r\nimport { getGenresApi } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nimport AnimateMovieCover from \"./animatedMovieCover\";\r\nimport Hero from \"./common/hero\";\r\n\r\nimport witcher from \"../utils/images/the-witcher.jpg\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// TODO:: changed the movieCover functionality -> onMouseHover remove the component\r\nclass Movies extends Component {\r\n  state = {\r\n    cover: witcher,\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    currentMovieCover: null,\r\n    fullImgVisible: false,\r\n    genreActiveClassIndex: 0,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: movies } = await getMoviesApi();\r\n    const { data: genresApi } = await getGenresApi();\r\n\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...genresApi];\r\n    this.setState({\r\n      movies,\r\n      genres,\r\n    });\r\n  }\r\n\r\n  //!:: optimistic delete\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovieApi(movie._id);\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 404) {\r\n        console.log(`Error: ${err}`);\r\n\r\n        this.setState({\r\n          movies: originalMovies,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleLike = async (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre, index) => {\r\n    this.setState({\r\n      genreActiveClassIndex: index,\r\n      selectedGenre: genre,\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleDisplayCover = (id) => {\r\n    const currentMovieCover = this.state.movies.find((movie) => movie._id === id);\r\n\r\n    this.setState(\r\n      {\r\n        currentMovieCover,\r\n        fullImgVisible: true,\r\n      },\r\n      () => {\r\n        // console.log(this.state.fullImgVisible)\r\n      }\r\n    );\r\n\r\n    //! --> this will not show the updated state (true) because state is asyncronyous. Either call fullImgVisible in render or\r\n    //! --> call the callback for the setState and console.log(fullImgVisible)\r\n    // console.log(this.state.fullImgVisible)\r\n  };\r\n\r\n  handleHideCover = () => {\r\n    this.setState({\r\n      fullImgVisible: false,\r\n    });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const { pageSize, currentPage, sortColumn, selectedGenre, searchQuery, movies: allMovies } = this.state;\r\n\r\n    let filtered = allMovies;\r\n\r\n    if (searchQuery) filtered = allMovies.filter((m) => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\r\n    else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { user } = this.props;\r\n    const { pageSize, currentPage, sortColumn, searchQuery, currentMovieCover, genreActiveClassIndex } = this.state;\r\n\r\n    if (count === 0)\r\n      return (\r\n        <p>\r\n          There are no movies in the <b>database</b>.\r\n        </p>\r\n      );\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <Hero bgImg={this.state.cover} description=\"Your Daily Dose of Movies\" title=\"PopCorn App\" />\r\n        </div>\r\n\r\n        <div className=\"container mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <ListGroup\r\n                items={this.state.genres}\r\n                // selectedItem={this.state.selectedGenre}\r\n                onItemSelect={this.handleGenreSelect}\r\n                activeClass={genreActiveClassIndex}\r\n              />\r\n\r\n              {currentMovieCover && (\r\n                <AnimateMovieCover movieSrc={currentMovieCover.movieCover} setShowImg={this.state.fullImgVisible} />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              {user && (\r\n                <Link to=\"/movies/new\" className=\"btn popcorn-btn\" style={{ marginBottom: 20 }}>\r\n                  <FontAwesomeIcon style={{ color: \"tomato\" }} icon={faVideo} />\r\n                  <span className=\"ml-2 font-weight-bold\">New Movie</span>\r\n                </Link>\r\n              )}\r\n\r\n              <p>\r\n                Showing {totalCount} movies in the <b>database</b>.\r\n              </p>\r\n\r\n              <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n              <MoviesTable\r\n                user={this.props.user}\r\n                movies={movies}\r\n                sortColumn={sortColumn}\r\n                onLike={this.handleLike}\r\n                onDelete={this.handleDelete}\r\n                onSort={this.handleSort}\r\n                onHandleDisplayMovieCover={this.handleDisplayCover}\r\n                handleHideCover={this.handleHideCover}\r\n              />\r\n\r\n              <Pagination\r\n                itemsCount={totalCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChange={this.handlePageChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}